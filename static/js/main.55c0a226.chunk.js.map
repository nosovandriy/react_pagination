{"version":3,"sources":["utils/utils.ts","utils/getSearchWith.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","set","Pagination","pagesQuantity","itemsOnCurrentPage","useSearchParams","searchParams","page","get","arrayOfPages","className","classNames","disabled","map","pageNumber","active","search","item","items","App","setSearchParams","perPage","Number","useState","allItems","Math","ceil","length","fistItemInPage","lastItemInPage","useEffect","id","onChange","event","target","htmlFor","ReactDOM","render","path","index","element","document","getElementById"],"mappings":"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","file":"static/js/main.55c0a226.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","export type SearchParams = {\n  [key: string]: string,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate).forEach(([key, value]) => {\n    newParams.set(key, value);\n  });\n\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getNumbers } from '../../utils/utils';\nimport { getSearchWith } from '../../utils/getSearchWith';\n\ntype Props = {\n  pagesQuantity: number,\n  itemsOnCurrentPage: number[],\n};\n\nexport const Pagination: React.FC<Props> = ({\n  pagesQuantity,\n  itemsOnCurrentPage,\n}) => {\n  const [searchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n\n  const arrayOfPages = getNumbers(1, pagesQuantity);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: +page === 1,\n            },\n          )}\n        >\n          <Link\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            to={+page === 1 ? `../?${getSearchWith(searchParams, { page: '1' })}` : `../?${getSearchWith(searchParams, { page: `${+page - 1}` })}`}\n            aria-disabled={+page === 1 ? 'true' : 'false'}\n          >\n            «\n          </Link>\n        </li>\n\n        {arrayOfPages.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: +page === pageNumber },\n            )}\n            key={pageNumber}\n          >\n            <Link\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              to={{\n                search: getSearchWith(searchParams, { page: `${pageNumber}` }),\n              }}\n            >\n              {pageNumber}\n            </Link>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: pagesQuantity === +page },\n          )}\n        >\n          <Link\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            to={+page === pagesQuantity ? `../?${getSearchWith(searchParams, { page: `${pagesQuantity}` })}` : `../?${getSearchWith(searchParams, { page: `${+page + 1}` })}`}\n            aria-disabled={pagesQuantity === +page ? 'true' : 'false'}\n          >\n            »\n          </Link>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnCurrentPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils/utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n  const perPage = Number(searchParams.get('perPage') || '5');\n\n  const [allItems] = useState(items);\n  const pagesQuantity = Math.ceil(allItems.length / perPage);\n\n  const fistItemInPage = +page * perPage - perPage + 1;\n  const lastItemInPage = +page * perPage > allItems.length\n    ? allItems.length\n    : +page * perPage;\n\n  const itemsOnCurrentPage = getNumbers(fistItemInPage, lastItemInPage);\n\n  const handleChangeItemsPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSearchParams({ perPage: event.target.value, page: '1' });\n  };\n\n  useEffect(() => {\n    setSearchParams({ perPage: '5', page });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${fistItemInPage} - ${lastItemInPage} of ${allItems.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangeItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        pagesQuantity={pagesQuantity}\n        itemsOnCurrentPage={itemsOnCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\">\n        <Route index element={<App />} />\n        <Route path=\"/react_pagination/\" element={<App />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}