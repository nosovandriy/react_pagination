{"version":3,"sources":["utils.ts","utils/getSearchWith.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","set","Pagination","pagesQuantity","itemsOnCurrentPage","handlePrevPage","handleNextPage","useSearchParams","searchParams","page","get","arrayOfPages","className","classNames","disabled","search","onClick","map","pageNumber","active","item","items","App","setSearchParams","perPage","Number","useState","allItems","Math","ceil","length","fistItemInPage","lastItemInPage","id","onChange","event","target","htmlFor","ReactDOM","render","path","element","document","getElementById"],"mappings":"wMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,qBCHF,SAASG,EACdC,EACAC,GAEA,IAAMC,EAAY,IAAIC,gBACpBH,EAAcI,YAOhB,OAJAC,OAAOC,QAAQL,GAAgBM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACvDP,EAAUQ,IAAIF,EAAKC,MAGdP,EAAUE,W,WCHNO,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,cACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEA,EAAuBC,cAAhBC,EAAP,oBACMC,EAAOD,EAAaE,IAAI,SAAW,IAEnCC,EAAe3B,EAAW,EAAGmB,GAEnC,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAAoB,KAATL,IAJjB,SAQE,cAAC,IAAD,CACE,UAAQ,WACRG,UAAU,YACV1B,GAAI,CACF6B,OAAQzB,EAAckB,EAAc,CAAEC,KAAK,GAAD,QAAMA,EAAO,MAEzD,gBAAyB,KAATA,EAAa,OAAS,QACtCO,QAASX,EAPX,oBAaDM,EAAaM,KAAI,SAAAC,GAAU,OAC1B,oBACEN,UAAWC,IACT,YACA,CAAEM,QAASV,IAASS,IAHxB,SAOE,cAAC,IAAD,CACE,UAAQ,WACRN,UAAU,YACV1B,GAAI,CACF6B,OAAQzB,EAAckB,EAAc,CAAEC,KAAK,GAAD,OAAKS,MAJnD,SAOGA,KATEA,MAcT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUX,KAAmBM,IAHnC,SAME,cAAC,IAAD,CACE,UAAQ,WACRG,UAAU,YACV1B,GAAI,CACF6B,OAAQzB,EAAckB,EAAc,CAAEC,KAAK,GAAD,QAAMA,EAAO,MAEzD,gBAAyB,KAATA,EAAa,OAAS,QACtCO,QAASV,EAPX,uBAaJ,6BACGF,EAAmBa,KAAI,SAAAG,GAAI,OAC1B,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YClF5BC,EAAQrC,EAAW,EAAG,IACzBiC,KAAI,SAAA7B,GAAC,qBAAYA,MAEPkC,EAAgB,WAC3B,MAAwCf,cAAxC,mBAAOC,EAAP,KAAqBe,EAArB,KACMd,EAAOD,EAAaE,IAAI,SAAW,IACnCc,EAAUC,OAAOjB,EAAaE,IAAI,YAAc,KAEtD,EAAmBgB,mBAASL,GAArBM,EAAP,oBAEMxB,EAAgByB,KAAKC,KAAKF,EAASG,OAASN,GAE5CO,GAAkBtB,EAAOe,EAAUA,EAAU,EAC7CQ,GAAkBvB,EAAOe,EAAUG,EAASG,OAC9CH,EAASG,QACRrB,EAAOe,EAENpB,EAAqBpB,EAAW+C,EAAgBC,GA2BtD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWH,EADX,mBAC0BsB,EAD1B,cAC8CC,EAD9C,eACmEL,EAASG,OAD5E,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVZ,MAAOwB,EACPU,SAxCuB,SAC/BC,GAEA3B,EAAaP,IAAI,UAAWkC,EAAMC,OAAOpC,OACzCQ,EAAaP,IAAI,OAAQ,KACzBsB,EAAgBf,IA8BV,UAOE,wBAAQR,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOqC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,cAAeA,EACfC,mBAAoBA,EACpBC,eAjDiB,WACS,KAATI,GAGnBnB,EAAckB,EAAc,CAAEC,KAAK,GAAD,QAAMA,EAAO,MA8C7CH,eA1CiB,YACDG,IAASN,IAG3BK,EAAaP,IAAI,OAAjB,WAA6BQ,EAAO,IACpCc,EAAgBf,WClCtB8B,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,qBAAqBC,QAAS,cAAC,EAAD,UAG9CC,SAASC,eAAe,W","file":"static/js/main.767bc4f8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","export type SearchParams = {\n  [key: string]: string,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate).forEach(([key, value]) => {\n    newParams.set(key, value);\n  });\n\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\nimport { getSearchWith } from '../../utils/getSearchWith';\n\ntype Props = {\n  pagesQuantity: number,\n  itemsOnCurrentPage: number[],\n  handlePrevPage: () => void,\n  handleNextPage: () => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  pagesQuantity,\n  itemsOnCurrentPage,\n  handlePrevPage,\n  handleNextPage,\n}) => {\n  const [searchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n\n  const arrayOfPages = getNumbers(1, pagesQuantity);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: +page === 1,\n            },\n          )}\n        >\n          <Link\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            to={{\n              search: getSearchWith(searchParams, { page: `${+page - 1}` }),\n            }}\n            aria-disabled={+page === 1 ? 'true' : 'false'}\n            onClick={handlePrevPage}\n          >\n            «\n          </Link>\n        </li>\n\n        {arrayOfPages.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: +page === pageNumber },\n            )}\n            key={pageNumber}\n          >\n            <Link\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              to={{\n                search: getSearchWith(searchParams, { page: `${pageNumber}` }),\n              }}\n            >\n              {pageNumber}\n            </Link>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: pagesQuantity === +page },\n          )}\n        >\n          <Link\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            to={{\n              search: getSearchWith(searchParams, { page: `${+page + 1}` }),\n            }}\n            aria-disabled={+page === 1 ? 'true' : 'false'}\n            onClick={handleNextPage}\n          >\n            »\n          </Link>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnCurrentPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { getSearchWith } from './utils/getSearchWith';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n  const perPage = Number(searchParams.get('perPage') || '5');\n\n  const [allItems] = useState(items);\n\n  const pagesQuantity = Math.ceil(allItems.length / perPage);\n\n  const fistItemInPage = +page * perPage - perPage + 1;\n  const lastItemInPage = +page * perPage > allItems.length\n    ? allItems.length\n    : +page * perPage;\n\n  const itemsOnCurrentPage = getNumbers(fistItemInPage, lastItemInPage);\n\n  const handleChangeItemsPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    searchParams.set('perPage', event.target.value);\n    searchParams.set('page', '1');\n    setSearchParams(searchParams);\n  };\n\n  const handlePrevPage = () => {\n    const isFirstPage = +page === 1;\n\n    if (!isFirstPage) {\n      getSearchWith(searchParams, { page: `${+page - 1}` });\n    }\n  };\n\n  const handleNextPage = () => {\n    const isLastPage = +page === pagesQuantity;\n\n    if (!isLastPage) {\n      searchParams.set('page', `${+page + 1}`);\n      setSearchParams(searchParams);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${fistItemInPage} - ${lastItemInPage} of ${allItems.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangeItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        pagesQuantity={pagesQuantity}\n        itemsOnCurrentPage={itemsOnCurrentPage}\n        handlePrevPage={handlePrevPage}\n        handleNextPage={handleNextPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// import ReactDOM from 'react-dom';\n// import { App } from './App';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/react_pagination/\" element={<App />} />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}