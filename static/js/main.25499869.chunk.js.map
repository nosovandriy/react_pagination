{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","activePage","pagesQuantity","itemsOnCurrentPage","onPageChange","onPrevPage","onNextPage","arrayOfPages","className","classNames","disabled","href","onClick","map","pageNumber","active","item","items","App","useState","allItems","itemsPerPage","setItemsPerPage","setActivePage","Math","ceil","length","fistItemInPage","lastItemInPage","id","value","onChange","event","Number","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCMIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,cACAC,EAII,EAJJA,mBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAeb,EAAW,EAAGQ,GAEnC,OACE,qCACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAAyB,IAAfT,IAJhB,SAQE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMP,EAAWJ,IAL5B,oBAWDM,EAAaM,KAAI,SAAAC,GAAU,OAC1B,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQd,IAAea,IAH7B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUR,IAAkBD,IAHlC,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMN,EAAWL,IAL5B,uBAWJ,6BACGE,EAAmBU,KAAI,SAAAG,GAAI,OAC1B,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YC9E5BC,EAAQvB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAmBC,mBAASF,GAArBG,EAAP,oBACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,mBAAS,GAA7C,mBAAOlB,EAAP,KAAmBsB,EAAnB,KAEMrB,EAAgBsB,KAAKC,KAAKL,EAASM,OAASL,GAE5CM,EAAiB1B,EAAaoB,EAAeA,EAAe,EAC5DO,EAAiB3B,EAAaoB,EAAeD,EAASM,OACxDN,EAASM,OACTzB,EAAaoB,EAEXlB,EAAqBT,EAAWiC,EAAgBC,GAiCtD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACgC0B,EADhC,cACoDC,EADpD,eACyER,EAASM,OADlF,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOT,EACPU,SAtBuB,SAC/BC,GAEAV,EAAgBW,OAAOD,EAAME,OAAOJ,QACpCP,EAAc,IAaR,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEN,cAAeA,EACfD,WAAYA,EACZE,mBAAoBA,EACpBC,aAhEmB,SAACgC,GACPA,IAASnC,GAGxBsB,EAAca,IA6DZ/B,WAjDiB,SAAC+B,GACO,IAATA,GAGlBb,EAAca,EAAO,IA8CnB9B,WA1DiB,SAAC8B,GACHA,IAASlC,GAG1BqB,EAAca,EAAO,UC/B3BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.25499869.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  activePage: number,\n  pagesQuantity: number,\n  itemsOnCurrentPage: number[],\n  onPageChange: (page: number) => void,\n  onPrevPage: (page: number) => void,\n  onNextPage: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  activePage,\n  pagesQuantity,\n  itemsOnCurrentPage,\n  onPageChange,\n  onPrevPage,\n  onNextPage,\n}) => {\n  const arrayOfPages = getNumbers(1, pagesQuantity);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: activePage === 1,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => onPrevPage(activePage)}\n          >\n            «\n          </a>\n        </li>\n\n        {arrayOfPages.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: activePage === pageNumber },\n            )}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: pagesQuantity === activePage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => onNextPage(activePage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnCurrentPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [allItems] = useState(items);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [activePage, setActivePage] = useState(1);\n\n  const pagesQuantity = Math.ceil(allItems.length / itemsPerPage);\n\n  const fistItemInPage = activePage * itemsPerPage - itemsPerPage + 1;\n  const lastItemInPage = activePage * itemsPerPage > allItems.length\n    ? allItems.length\n    : activePage * itemsPerPage;\n\n  const itemsOnCurrentPage = getNumbers(fistItemInPage, lastItemInPage);\n\n  const handleChangePage = (page: number) => {\n    const isActive = page === activePage;\n\n    if (!isActive) {\n      setActivePage(page);\n    }\n  };\n\n  const handleNextPage = (page: number) => {\n    const isLastPage = page === pagesQuantity;\n\n    if (!isLastPage) {\n      setActivePage(page + 1);\n    }\n  };\n\n  const handlePrevPage = (page: number) => {\n    const isFirstPage = page === 1;\n\n    if (!isFirstPage) {\n      setActivePage(page - 1);\n    }\n  };\n\n  const handleChangeItemsPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setItemsPerPage(Number(event.target.value));\n    setActivePage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePage} (items ${fistItemInPage} - ${lastItemInPage} of ${allItems.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleChangeItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        pagesQuantity={pagesQuantity}\n        activePage={activePage}\n        itemsOnCurrentPage={itemsOnCurrentPage}\n        onPageChange={handleChangePage}\n        onPrevPage={handlePrevPage}\n        onNextPage={handleNextPage}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}