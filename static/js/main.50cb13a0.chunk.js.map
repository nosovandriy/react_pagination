{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","pagesQuantity","itemsOnCurrentPage","handleChangePage","handlePrevPage","handleNextPage","location","useLocation","arrayOfPages","useSearchParams","activePage","get","className","classNames","disabled","onClick","map","pageNumber","active","pathname","search","item","items","App","searchParams","setSearchParams","itemsPerPage","useState","allItems","Math","ceil","length","fistItemInPage","lastItemInPage","id","value","onChange","event","set","target","htmlFor","page","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50cb13a0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  pagesQuantity: number,\n  itemsOnCurrentPage: number[],\n  handleChangePage: (page: string) => void,\n  handlePrevPage: (page: number) => void,\n  handleNextPage: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  pagesQuantity,\n  itemsOnCurrentPage,\n  handleChangePage,\n  handlePrevPage,\n  handleNextPage,\n}) => {\n  const location = useLocation();\n\n  const arrayOfPages = getNumbers(1, pagesQuantity);\n\n  const [searchParams] = useSearchParams();\n  const activePage = searchParams.get('activePage') || '1';\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: +activePage === 1,\n            },\n          )}\n        >\n          <Link\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            to={activePage}\n            aria-disabled={+activePage === 1 ? 'true' : 'false'}\n            onClick={() => handlePrevPage(+activePage)}\n          >\n            «\n          </Link>\n        </li>\n\n        {arrayOfPages.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: +activePage === pageNumber },\n            )}\n            key={pageNumber}\n          >\n            <Link\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              to={{\n                pathname: '/',\n                search: location.search,\n              }}\n              onClick={() => handleChangePage(`${pageNumber}`)}\n            >\n              {pageNumber}\n            </Link>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: pagesQuantity === +activePage },\n          )}\n        >\n          <Link\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            to={activePage}\n            aria-disabled={pagesQuantity === +activePage ? 'true' : 'false'}\n            onClick={() => handleNextPage(+activePage)}\n          >\n            »\n          </Link>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnCurrentPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const itemsPerPage = searchParams.get('itemsPerPage') || '5';\n  const activePage = searchParams.get('activePage') || '1';\n\n  const [allItems] = useState(items);\n\n  const pagesQuantity = Math.ceil(allItems.length / +itemsPerPage);\n\n  const fistItemInPage = +activePage * +itemsPerPage - +itemsPerPage + 1;\n  const lastItemInPage = +activePage * +itemsPerPage > allItems.length\n    ? allItems.length\n    : +activePage * +itemsPerPage;\n\n  const itemsOnCurrentPage = getNumbers(fistItemInPage, lastItemInPage);\n\n  const handleChangePage = (pageNumber: string) => {\n    const isActive = pageNumber === activePage;\n\n    if (!isActive) {\n      searchParams.set('activePage', pageNumber);\n      setSearchParams(searchParams);\n    }\n  };\n\n  const handleNextPage = (page: number) => {\n    const isLastPage = page === pagesQuantity;\n\n    if (!isLastPage) {\n      searchParams.set('activePage', `${page + 1}`);\n      setSearchParams(searchParams);\n    }\n  };\n\n  const handlePrevPage = (page: number) => {\n    const isFirstPage = page === 1;\n\n    if (!isFirstPage) {\n      searchParams.set('activePage', `${page - 1}`);\n      setSearchParams(searchParams);\n    }\n  };\n\n  const handleChangeItemsPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    searchParams.set('itemsPerPage', event.target.value);\n    searchParams.set('activePage', '1');\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePage} (items ${fistItemInPage} - ${lastItemInPage} of ${allItems.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleChangeItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        pagesQuantity={pagesQuantity}\n        itemsOnCurrentPage={itemsOnCurrentPage}\n        handleChangePage={handleChangePage}\n        handlePrevPage={handlePrevPage}\n        handleNextPage={handleNextPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nconst Root = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}